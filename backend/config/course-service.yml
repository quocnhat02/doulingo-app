server:
  port: ${COURSE_SERVICE_PORT}

spring:
  application:
    name: course-service

  datasource:
    url: jdbc:postgresql://${COURSE_DB_HOST}:${COURSE_DB_PORT}/${COURSE_DB_NAME}?sslmode=require
    username: ${COURSE_DB_USER}
    password: ${COURSE_DB_PASS}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        ddl-auto: create
        dialect: org.hibernate.dialect.PostgreSQLDialect

#  flyway:
#    enabled: true
#    locations: classpath:db/migration
#    baseline-on-migrate: true
#    validate-on-migrate: true
#    out-of-order: false

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${EUREKA_DEFAULT_ZONE}
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${random.value}


management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,beans,conditions,env,configprops,loggers,threaddump,
          circuitbreakers,retry,ratelimiters,bulkheads,threadpoolbulkheads,timelimiters
  endpoint:
    health:
      show-details: always